<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Documentation - Category - </title>
        <link>/categories/leetcode/</link>
        <description>Documentation - Category - </description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 16 Sep 2023 18:30:12 &#43;0800</lastBuildDate><atom:link href="/categories/leetcode/" rel="self" type="application/rss+xml" /><item>
    <title>The Journey of Learning LeetCode</title>
    <link>/posts/the-learning-about-leetcode-algorithm/</link>
    <pubDate>Sat, 16 Sep 2023 18:30:12 &#43;0800</pubDate>
    <author>Author</author>
    <guid>/posts/the-learning-about-leetcode-algorithm/</guid>
    <description><![CDATA[我的LeetCode学习之路 先放一张图片：
嘿嘿嘿，这几乎算是人生LeetCode高光了~主要我之前可是连一道简单题都写不出来的人啊！
我大约是2021年的3月份开始，先把LeetCode当时的所有简单题都刷了一遍，主要是为了熟悉python语法和简单的算法知识。然后&hellip;然后就颓废了小半年 &gt;_&lt; 。直到2021年的9月份，开始系统性的学习算法知识。在这里要特别感谢@labuladong。我就是跟着他的讲解一篇一篇读、一道题一道题开始学习。
先从链表、二叉树开始，在学习链表的同时学习了双指针；在学习二叉树递归的同时，也会接触到回溯（DFS）；学习到二叉树的迭代，也顺带学习了BFS。在学习BFS的时候接触到了图，然后就学习了Dijkstra、二分图、并查集。
接下来就是动态规划，我觉得如果能彻底掌握动态规划的base case和递归的方法，那其实并不算很难很难（主要是我之前自己实在是太菜了，一丁点的思路都没有，现在好歹有点思路）。动态规划的子序列、子串问题我觉得好难啊！
经典的还有单调栈（每次看到单调栈的题解都要一拍大腿：感慨人家好聪明的想法！）。还有堆，用于找top N的题。数组用的比较多的还有前缀和、差分数组、二分、位运算（直到现在我都记不住，感觉还是没有彻底了解位运算啊！）。二分算法的变种真的需要提醒，这种我肯定没法上来就想到的，除非看到提示“binary search”或者O(log n)能稍微往这边想一下。
还有经典的排序算法：快速排序、计数排序、桶排序（其实现在都已经不记得了 QAQ）
这些都是在2021年的9月份到2022年的4月份中间，陆陆续续学习的。这其中用了国区的账号去参加比赛（刷题大部分用的是美区账号，我发现国区的花样好多啊！打比赛还能收到小礼物！我就收到过力扣的扑克牌嘿嘿嘿！）这么想想还是学习了很多东西的啊！为自己骄傲一把 ʅ（´◔౪◔）ʃ。但是后面因为找到了工作就松懈了一年，幸好一年以后再看有一部分都还可以回忆起来，说明是这些真的理解并掌握了的！那些不太记得还需要再次看的就是掌握没有那么好，那就再学习就好。
希望自己能够时刻有着忧患意识，这个时代发展太快，我随时可能都会被抛弃，希望自己能够永远保持心怀感激、永远能够热泪盈眶吧！]]></description>
</item>
</channel>
</rss>
